{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\src\\\\App.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!, $complete: Boolean!{\\n    removeTodo(id: $id, complete: $complete )\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!){\\n    removeTodo(id: $id)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  todos{\\n    id\\n    complete\\n    text\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete'; //import CheckboxList from \"./Compnents/CheckboxList\";\n\nvar TodoQuery = gql(_templateObject());\nvar removeMutation = gql(_templateObject2());\nvar updateMutation = gql(_templateObject3());\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateTodo = function (todo) {//updates the todo\n    };\n\n    _this.deleteTodo = function (todo) {//removes this\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var _this$props$data = this.props.data,\n          loading = _this$props$data.loading,\n          todos = _this$props$data.todos;\n\n      if (loading) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, todos.map(function (todo) {\n        return React.createElement(ListItem, {\n          key: todo.id,\n          role: undefined,\n          dense: true,\n          button: true,\n          onClick: _this2.updateTodo(todo),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            fontSize: '200%'\n          },\n          primary: todo.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(Checkbox, {\n          checked: todo.complete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Comments\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(DeleteIcon, {\n          onClick: function onClick() {\n            return _this2.removeTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }))));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default compose(graphql(TodoQuery), graphql(updateMutation, {\n  name: 'updateTodo'\n}), graphql(removeMutation))(App);","map":{"version":3,"sources":["C:\\Users\\CAGE\\Documents\\formSite\\client\\src\\App.js"],"names":["React","Component","gql","graphql","compose","Paper","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","DeleteIcon","TodoQuery","removeMutation","updateMutation","App","updateTodo","todo","deleteTodo","console","log","props","data","loading","todos","display","justifyContent","width","map","id","undefined","fontSize","text","complete","removeTodo","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n//import CheckboxList from \"./Compnents/CheckboxList\";\n\nconst TodoQuery = gql`\n{\n  todos{\n    id\n    complete\n    text\n  }\n}\n`;\n\nconst removeMutation = gql`\n  mutation($id: ID!){\n    removeTodo(id: $id)\n  }\n`;\n\nconst updateMutation = gql`\n  mutation($id: ID!, $complete: Boolean!{\n    removeTodo(id: $id, complete: $complete )\n  }\n`;\n\n\nclass App extends Component {\n\n\n  updateTodo = todo => {\n    //updates the todo\n    \n  };\n  deleteTodo = todo => {\n    //removes this\n\n  }\n\n  render() {\n    console.log(this.props);\n    const {data:{loading, todos}} = this.props;\n\n    if (loading){\n      return null;\n    }\n    return (\n      <div style={{display: 'flex', justifyContent: 'center'}}>\n        <div style = {{width: '50%'}}>\n          \n            <List >\n            {todos.map(todo => (\n            <ListItem  key={todo.id} role={undefined} dense button onClick={this.updateTodo(todo)}>\n              \n              <ListItemText style={{display: 'flex', justifyContent: 'center', fontSize:'200%'}} primary={todo.text} />\n              <Checkbox checked={todo.complete}/>\n              <ListItemSecondaryAction>\n                <IconButton aria-label=\"Comments\">\n                  <DeleteIcon onClick = {() => this.removeTodo(todo)}/>\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n              ))}\n            </List>\n        \n           \n         </div>       \n       </div>\n    )\n  }\n}\n\n\n\nexport default compose(\n  graphql(TodoQuery),\n  graphql(updateMutation, {name: 'updateTodo'}),\n  graphql(removeMutation))\n  (App);\n"]},"metadata":{},"sourceType":"module"}