{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\CAGE\\\\Documents\\\\formSite\\\\client\\\\src\\\\App.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\nmutation($id:ID!){\\n\\tremoveTodo(id:$id)\\n}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nmutation($id:ID!, $complete : Boolean!){\\n\\tupdateTodo(id:$id, complete:$complete)\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  todos {\\n    id\\n    text\\n    complete\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nvar TodoQuery = gql(_templateObject());\nvar UpdateTodo = gql(_templateObject2());\nvar RemoveTodo = gql(_templateObject3());\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(todo) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //update todo\n                console.log(todo.text);\n                _context.next = 3;\n                return _this.props.updateTodo({\n                  variables: {\n                    id: todo.id,\n                    complete: !todo.complete\n                  },\n                  update: function update(store) {\n                    // Read the data from our cache for this query.\n                    var data = store.readQuery({\n                      query: TodoQuery\n                    });\n                    /* Add our comment from the mutation to the end.\n                    data.todos.map(todos => todos.id == todo.id ? {\n                      ...todos,\n                      complete: !todo.complete\n                    } : todos);\n                    // Write our data back to the cache.\n                    store.writeQuery({ query: TodoQuery, data });*/\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.removeTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(todo) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.props.removeTodo({\n                  variables: {\n                    id: todo.id\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$data = this.props.data,\n          loading = _this$props$data.loading,\n          todos = _this$props$data.todos;\n\n      if (loading) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: \"auto\",\n          width: 400\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, todos.map(function (todo) {\n        return React.createElement(ListItem, {\n          key: \"number \".concat(todo.id),\n          role: undefined,\n          dense: true,\n          button: true,\n          onClick: function onClick() {\n            return _this2.updateTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: todo.complete,\n          tabIndex: -1,\n          disableRipple: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: todo.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: function onClick() {\n            return _this2.removeTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(DeleteIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }))));\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default compose(graphql(UpdateTodo, {\n  name: \"updateTodo\"\n}), graphql(RemoveTodo, {\n  name: \"removeTodo\"\n}), graphql(TodoQuery))(App);","map":{"version":3,"sources":["C:\\Users\\CAGE\\Documents\\formSite\\client\\src\\App.js"],"names":["React","Component","gql","graphql","compose","Paper","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","DeleteIcon","TodoQuery","UpdateTodo","RemoveTodo","App","updateTodo","todo","console","log","text","props","variables","id","complete","update","store","data","readQuery","query","removeTodo","loading","todos","display","margin","width","map","undefined","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport gql from \"graphql-tag\";\nimport { graphql,compose } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst TodoQuery = gql`\n{\n  todos {\n    id\n    text\n    complete\n  }\n}\n`;\n\nconst UpdateTodo = gql`\nmutation($id:ID!, $complete : Boolean!){\n\tupdateTodo(id:$id, complete:$complete)\n}\n`;\nconst RemoveTodo = gql`\nmutation($id:ID!){\n\tremoveTodo(id:$id)\n}\n`;\n\n\nclass App extends Component {\n\n  updateTodo = async todo => {\n    //update todo\n    console.log(todo.text);\n    await this.props.updateTodo({\n      variables:{\n        id : todo.id,\n        complete: !todo.complete\n      },\n        update: store => {\n        // Read the data from our cache for this query.\n        const data = store.readQuery({ query: TodoQuery });\n        /* Add our comment from the mutation to the end.\n        data.todos.map(todos => todos.id == todo.id ? {\n          ...todos,\n          complete: !todo.complete\n        } : todos);\n        // Write our data back to the cache.\n        store.writeQuery({ query: TodoQuery, data });*/\n      }\n    })\n  };\n\n  removeTodo = async todo =>{   \n      await this.props.removeTodo({\n        variables:{\n          id : todo.id      \n        }\n      })\n  };\n\n  render() {\n    \n    const {data:{loading, todos}} = this.props;\n\n    if (loading){\n      return null;\n    } \n    return (\n      <div style={{display:'flex'}}> \n        <div style={{margin:\"auto\", width: 400}}>\n          <Paper>\n             <List>\n              {todos.map(todo => (\n                <ListItem key={`number ${todo.id}`} role={undefined} dense button onClick={() => this.updateTodo(todo)}>\n                  <Checkbox\n                    checked={todo.complete}\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                  <ListItemText primary={todo.text} />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick ={()=> this.removeTodo(todo)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>  \n          </Paper>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n      \n       \n     \n \n\n\n\nexport default compose(\ngraphql(UpdateTodo, {name:\"updateTodo\"}),\ngraphql(RemoveTodo, {name:\"removeTodo\"}),\ngraphql(TodoQuery))\n(App);\n"]},"metadata":{},"sourceType":"module"}